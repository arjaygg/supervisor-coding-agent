{
  "permissions": {
    "allow": [
      "Bash(git init:*)",
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(git cherry-pick:*)",
      "Bash(gh issue create:*)",
      "Bash(git commit:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr review:*)",
      "Bash(gh pr merge:*)",
      "Bash(git pull:*)",
      "Bash(python -m pytest supervisor_agent/tests/test_agent.py::test_execute_task_success -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_agent.py::test_execute_task_failure -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_agent.py -k \"claude_cli\" -v)",
      "Bash(pip3 install:*)",
      "Bash(python -m pytest supervisor_agent/tests/ -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_api.py::test_health_check -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_api.py::test_create_task supervisor_agent/tests/test_api.py::test_get_tasks -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_api.py::test_create_task -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_api.py -k \"not detailed_health_check and not metrics_endpoint\" -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_quota.py -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_agent.py -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_agent.py::test_prompt_template_system -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_api.py::test_detailed_health_check supervisor_agent/tests/test_api.py::test_metrics_endpoint -v)",
      "Bash(python -m pytest supervisor_agent/tests/ --tb=short)",
      "Bash(chmod:*)",
      "Bash(./scripts/health-check.sh:*)",
      "Bash(python -m pytest supervisor_agent/tests/test_cost_tracking.py -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_cost_tracking.py::TestTokenEstimator -v)",
      "Bash(python -m pytest supervisor_agent/tests/ -x --tb=short -q)",
      "Bash(python -m pytest supervisor_agent/tests/test_cost_tracking.py::TestCostTracker::test_track_task_execution -v)",
      "Bash(python -m pytest supervisor_agent/tests/ --tb=short -q)",
      "Bash(python -m pytest supervisor_agent/tests/test_cost_tracking.py::TestCostTrackingCRUD::test_get_cost_summary_empty_data -v)",
      "Bash(rm:*)",
      "Bash(python -m pytest supervisor_agent/tests/test_websocket.py -v)",
      "Bash(npm test)",
      "Bash(npm install)",
      "Bash(python -m pytest supervisor_agent/tests/test_subscription_intelligence.py -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_subscription_integration.py -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_subscription_integration.py::TestIntelligentTaskProcessor::test_process_task_new_request -v)",
      "Bash(python -m pytest supervisor_agent/tests/test_static_analysis.py -x --tb=short -q)",
      "Bash(git branch:*)",
      "Bash(./scripts/cleanup-github-gcp-integration.sh:*)",
      "Bash(gcloud iam workload-identity-pools list:*)",
      "Bash(git remote get-url:*)",
      "Bash(./scripts/setup-github-gcp-simple.sh:*)",
      "Bash(gcloud iam workload-identity-pools create:*)",
      "Bash(gcloud iam workload-identity-pools describe:*)",
      "Bash(gcloud iam workload-identity-pools providers create-oidc:*)",
      "Bash(gcloud iam service-accounts add-iam-policy-binding:*)",
      "Bash(gcloud iam workload-identity-pools providers describe:*)",
      "Bash(rg:*)",
      "Bash(gh pr close:*)",
      "Bash(sed:*)",
      "Bash(mv:*)"
    ],
    "deny": []
  }
}